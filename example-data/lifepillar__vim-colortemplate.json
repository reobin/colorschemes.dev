{"id": 104588116, "name": "vim-colortemplate", "description": " The Toolkit for Vim Color Scheme Designers!", "default_branch": "master", "github_url": "https://github.com/lifepillar/vim-colortemplate", "homepage_url": "", "stargazers_count": 322, "pushed_at": "2020-04-28T19:14:05Z", "owner": {"name": "lifepillar", "avatar_url": "https://avatars1.githubusercontent.com/u/1193314?v=4"}, "readme": "# Colortemplate: The Toolkit for Vim Color Scheme Designers!\n\n![](https://raw.github.com/lifepillar/Resources/master/colortemplate/colortemplate-v2.png)\n\nColortemplate is a 100% VimScript plugin for Vim 8 that allows you to easily\ndevelop color schemes. Its ambitious goal is to become *the* way to create new\ncolor schemes for Vim!\n\n## Quick Start\n\nInstalling this plugin does not require anything special. If you need help,\nplease first check the\n[FAQ](https://github.com/lifepillar/vim-colortemplate/wiki/FAQs).\n\n```vim\n:edit templates/default_clone.colortemplate\n:Colortemplate! ~/.vim\n:colorscheme default_clone\n```\n\nThe resulting color scheme will be written into `~/.vim/colors`.\nThe generated color scheme replicates Vim's `default` color scheme. Look inside\nthe `templates` folder for other templates.\n\n**Note:** `:Colortemplate` and other plugin's commands are filetype-specific. That\nmeans that they are available only if the filetype is set to `colortemplate`.\nYou may need to explicitly type `:set ft=colortemplate` to make them available\nin new buffers.\n\n\n## Features\n\n- Generates color schemes that support all environments, from black&white to\n  million colors, both terminal and GUI.\n- Generates color schemes that load efficiently and have a consistent structure\n  following best practices.\n- Has syntax completion for highlight groups, keywords and common colors.\n- Supports generating any kind of auxiliary files (say,\n  `autoload/gorgeous.vim` or `scripts/foo.sh`).\n- Automatically provides xterm approximations for GUI colors.\n- Can display information about the highlight group under the cursor.\n- Computes useful statistics about your color palette.\n- Is fully documented!\n\nTo know everything about Colortemplate, read `:help colortemplate.txt`.\n\nColortemplate is based on a very simple but very flexible template format.\nThis is a minimal template:\n\n```\n# vim: ft=colortemplate\nFull name:  My Gorgeous Theme\nShort name: gorgeous\nAuthor:     Me <me@somewhere.org>\n\nVariant:    gui 256 8\nBackground: dark\n\n# Color palette\nColor:      black #000000 ~ Black\nColor:      white #ffffff ~ White\n\n# Highlight group definitions\nNormal white black\n# Etc\u2026\n```\n\nIf you want to get a flavor of how Colortemplate can be used in the real world,\ntake a look at some color schemes created with it:\n[WWDC16](https://github.com/lifepillar/vim-wwdc16-theme) and\n[WWDC17](https://github.com/lifepillar/vim-wwdc17-theme) (simple), or\n[Gruvbox 8](https://github.com/lifepillar/vim-gruvbox8) and\n[Solarized 8](https://github.com/lifepillar/vim-solarized8) (complex).\n\n\n## Migrating from v1\n\nUsers of Colortemplate v1 in most cases will still be able to build their color\nschemes, with just a couple of additional warnings. Anyway, to fully migrate to\nv2, the following must be taken into account:\n\n- The `Terminal Colors` directive has been deprecated in favor of the much more\n  flexible mechanism of *variants* (see below).\n- The ambiguous `@term<color>` interpolation pattern has been removed: use\n  `@term16<color>` or `@term256<color>` instead.\n- There is a new `Term Colors` key, which allows you specify the 16 ASCII colors\n  to be used in Vim terminal windows. If you were using `verbatim` blocks for\n  this, you should remove them: Colortemplate v2 automatically defines\n  `g:terminal_ansi_colors` (and the equivalent for NeoVim if enabled, see\n  below).\n- There is a new `Variant` directive, which specifies to which environments the\n  subsequent definitions apply. Replace `Terminal Colors: 256` with `Variant:\n  gui 256`; replace `Terminal Colors: 256 16` with `Variant: gui 256 16`; and so\n  on. See `:help colortemplate-variants` for more information.\n- There is a new `Neovim` key: when its value is `yes`, additional code to\n  support Neovim is generated (default is `no`).\n- The `Maintainer` key is now optional.\n- If you were using `verbatim` blocks to check for italics, you should remove\n  them: Colortemplate v2 deals with the `italic` attribute automatically. Just\n  define your highlight groups as if italics is available, and let Colortemplate\n  do the rest.\n- Many `verbatim` blocks may now be replaced with `#if`, `#let`, \u2026, commands\n  (see `:help colortemplate-verbatim`).\n- Colortemplate v2 does not generate any help file by default any more (color\n  schemes have no settings by default). You may need to adjust your help\n  templates (see `templates/_help.colortemplate`).\n- `Background` directives accept a new value (`any`). You may switch between\n  `dark`, `light` and `any` an arbitrary number of times.\n- Anything before the first `Background` and `Variant` directives is considered\n  to be \u201cin global scope\u201d and put at the start of the generated color scheme.\n  You may put setup stuff in `verbatim` blocks there, or linked group\n  definitions that apply to all variants.\n- Validation is now performed with `$VIMRUNTIME/colors/tools/check_colors.vim`\n  (`:ColortemplateCheck` command or Check menu entry in the toolbar).\n- Statistics are generated separately from the color scheme\n  (`:ColortemplateStats` or Stats menu entry in the toolbar).\n- Try typing `3ga` with the cursor on a `Color` line!\n\n## Contributions\n\nDo you want to contribute? Do you have any suggestions on how to improve\nColortemplate? Open an issue or submit a pull request!\n\nSee also [the discussion](https://github.com/vim/vim/issues/1665) that prompted\nthe creation of this script.\n\n", "image_urls": ["https://raw.github.com/lifepillar/Resources/master/colortemplate/colortemplate-v2.png"], "latest_commit_at": "2020-04-28T19:13:18Z"}