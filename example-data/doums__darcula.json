{"id": 213182116, "name": "darcula", "description": "A Vim color scheme reproduction of the official JetBrains IDE Darcula theme", "default_branch": "master", "github_url": "https://github.com/doums/darcula", "homepage_url": "", "stargazers_count": 88, "pushed_at": "2020-05-21T22:39:57Z", "owner": {"name": "doums", "avatar_url": "https://avatars2.githubusercontent.com/u/6359431?v=4"}, "readme": "## Darcula\n\n![darcula](https://image.petitmur.beer/darcula.png)\n\n:smiling_imp: A [Vim](https://www.vim.org/)/[Neovim](https://neovim.io/) color scheme reproduction of the official [JetBrains](https://www.jetbrains.com/) IDE Darcula theme\n\n### install\nIf you use a plugin manager, follow the traditional way.\n\nFor example with [vim-plug](https://github.com/junegunn/vim-plug) add this in `.vimrc`/`init.vim`:\n```\nPlug 'doums/darcula'\n```\n\nThen run in vim:\n```\n:source $MYVIMRC\n:PlugInstall\n```\nIf you use vim package `:h packages`.\n\n### usage\nPut this in your `.vimrc`/`init.vim`:\n```\ncolorscheme darcula\n```\nTo fully enjoy the color scheme and if your terminal supports [Truecolor](https://gist.github.com/XVilka/8346728) add\n```\nset termguicolors\n```\n\nIf you use [lightline](https://github.com/itchyny/lightline.vim):\n```\nlet g:lightline = { 'colorscheme': 'darculaOriginal' }\n```\nNOTE: lightline already provides a \"darcula\" color scheme that I find simply bad. I strongly recommend to use mine instead (using `darculaOriginal` instead of `darcula` in the above config).\n\n### VimScript API\n\n#### `list` colors: [ truecolor: `string`, 256color: `number` ]\n\n**truecolor:** `string`\\\nhexadecimal color with a `#` prefix\n\n**256color:** `number`\\\nshould be between 16-255\\\nANSI 256 color (useful for non truecolor terminals that do not support `set termguicolors`)\n\n#### `dictionary` darcula#palette: { key: `string`: value: `colors` }\nthe colors palette of Darcula\n\n#### `function` darcula#Hi(group: `string`, fg: `colors`, bg: `?colors`, style: `?string`)\nhelper function to create highlight group\n\n**group:** `string`\\\ngroup name\n\n**fg:** `colors`\\\nforeground colors\n\n**bg:** `?colors`\\\nbackground colors\n\n**style:** `?string`\\\ntext style (for possible values see `:h bold`)\n\n#### example:\n```\ncall darcula#Hi('rustLifetime', darcula#palette.macroName, darcula#palette.bg, 'italic')\ncall darcula#Hi('Comment', [ '#eeeeee', 255 ], darcula#palette.null, 'italic')\ncall darcula#Hi('BlackFg', [ '#000000', 16 ])\n```\n\n### helper groups\nDarcula provides some helper groups.\\\nYou can use them with `hi link`.\n\n[GitGutter](https://github.com/airblade/vim-gitgutter)\n```\nhi! link GitGutterAdd GitAddStripe\nhi! link GitGutterChange GitChangeStripe\nhi! link GitGutterDelete GitDeleteStripe\nlet g:gitgutter_sign_removed = '\u25b6'\n```\n\n[Coc](https://github.com/neoclide/coc.nvim)\n```\nhi! link CocErrorSign ErrorSign\nhi! link CocWarningSign WarningSign\nhi! link CocInfoSign InfoSign\nhi! link CocHintSign InfoSign\nhi! link CocErrorFloat Pmenu\nhi! link CocWarningFloat Pmenu\nhi! link CocInfoFloat Pmenu\nhi! link CocHintFloat Pmenu\nhi! link CocHighlightText IdentifierUnderCaret\nhi! link CocHighlightRead IdentifierUnderCaret\nhi! link CocHighlightWrite IdentifierUnderCaretWrite\nhi! link CocErrorHighlight CodeError\nhi! link CocWarningHighlight CodeWarning\nhi! link CocInfoHighlight CodeInfo\nhi! link CocHintHighlight CodeHint\n```\n\n[ALE](https://github.com/dense-analysis/ale)\n```\nhi! link ALEError Error\nhi! link ALEWarning CodeWarning\nhi! link ALEInfo CodeInfo\nhi! link ALEErrorSign ErrorSign\nhi! link ALEWarningSign WarningSign\nhi! link ALEInfoSign InfoSign\n```\n\n### color support\n- Truecolor\n- 256 color\n\n### credits\n[JetBrains](https://www.jetbrains.com/) for the original and awsome Darcula color scheme!\n\n### license\nMozilla Public License 2.0\n", "image_urls": ["https://image.petitmur.beer/darcula.png"], "latest_commit_at": "2020-05-21T22:40:01Z"}