{"id": 235726708, "name": "vim-nightfly-guicolors", "description": "Another dark color scheme for Vim", "default_branch": "master", "github_url": "https://github.com/bluz71/vim-nightfly-guicolors", "homepage_url": "", "stargazers_count": 100, "pushed_at": "2020-05-24T04:27:03Z", "owner": {"name": "bluz71", "avatar_url": "https://avatars3.githubusercontent.com/u/11382509?v=4"}, "readme": "![nightfly](https://raw.githubusercontent.com/bluz71/misc-binaries/master/headings/nightfly.png)\n==========\n\n_nightfly_ is a dark GUI color scheme for Vim and Neovim heavily inspired by\nSarah Drasner's [Night Owl](https://github.com/sdras/night-owl-vscode-theme)\ntheme mixed with a dash of my own\n[moonfly](https://github.com/bluz71/vim-moonfly-colors) theme, hence the name\n_nightfly_.\n\nBe aware, the _nightfly_ color scheme does incrementally change from time to\ntime, primarily with regard to language and plugin theming.\n\nPrerequisites\n-------------\n\n_nightfly_ is a **GUI-only** Vim color scheme.\n\nA GUI client, such as gvim, **or** a modern terminal version of Vim/Neovim, with\n`termguicolors` enabled in a true-color terminal, will be required. Details\nabout true-color terminals are listed below.\n\n_nightfly_ explicitly does **not** support color terminal versions of Vim,\nincluding 256 `cterm`, due to the number of custom colors required. Color\nterminals only allow 16 custom colors. I encourage terminal users to use a\ntrue-color terminal, such as [iTerm2](https://iterm2.com) or [GNOME\nTerminal](https://wiki.gnome.org/Apps/Terminal), and enable the `termguicolors`\noption available in modern terminal versions of Vim and Neovim.\n\nPrimary Colors\n--------------\n\n| Normal     | Color                                                       | Bright     | Color                                                       |\n| ---------- | ----------------------------------------------------------- | -----------| ----------------------------------------------------------- |\n| Background | ![background](https://placehold.it/64/011627/000000?text=+) | Foreground | ![foreground](https://placehold.it/64/c3ccdc/000000?text=+) |\n| Red        | ![red](https://placehold.it/64/fc514e/000000?text=+)        | Watermelon | ![watermelon](https://placehold.it/64/ff5874/000000?text=+) |\n| Green      | ![green](https://placehold.it/64/a1cd5e/000000?text=+)      | Emerald    | ![emerald](https://placehold.it/64/21c7a8/000000?text=+)    |\n| Yellow     | ![yellow](https://placehold.it/64/e3d18a/000000?text=+)     | Tan        | ![tan](https://placehold.it/64/ecc48d/000000?text=+)        |\n| Blue       | ![blue](https://placehold.it/64/82aaff/000000?text=+)       | Purple     | ![purple](https://placehold.it/64/ae81ff/000000?text=+)     |\n| Violet     | ![violet](https://placehold.it/64/c792ea/000000?text=+)     | Turquoise  | ![turquoise](https://placehold.it/64/7fdbca/000000?text=+)  |\n| Orange     | ![orange](https://placehold.it/64/f78c6c/000000?text=+)     | Peach      | ![peach](https://placehold.it/64/ffcb8b/000000?text=+)      |\n\nScreenshots\n-----------\n\n### Ruby\n\n<img width=\"800\" alt=\"ruby\" src=\"https://raw.githubusercontent.com/bluz71/misc-binaries/master/nightfly/ruby_nightfly.png\">\n\n### JavaScript\n\n<img width=\"800\" alt=\"javascript\" src=\"https://raw.githubusercontent.com/bluz71/misc-binaries/master/nightfly/javascript_nightfly.png\">\n\nThe font in use is [Iosevka](https://github.com/be5invis/Iosevka).\n\nLanguages explicitly styled\n---------------------------\n\n- C/C++\n- Clojure\n- CoffeeScript\n- Crystal\n- Elixir\n- Elm\n- Dart\n- Go\n- Haskell\n- Java\n- [JavaScript](https://github.com/pangloss/vim-javascript)\n- Lua\n- [Markdown](https://github.com/plasticboy/vim-markdown)\n- PHP\n- PureScript\n- Python\n- Ruby\n- Rust\n- Scala\n- Shell\n- [TypeScript](https://github.com/HerringtonDarkholme/yats.vim)\n\nPlugins explicity styled\n------------------------\n\n- [NERDTree](https://github.com/scrooloose/nerdtree)\n- [ALE](https://github.com/w0rp/ale)\n- [Neomake](https://github.com/neomake/neomake)\n- [GitGutter](https://github.com/airblade/vim-gitgutter)\n- [fzf.vim](https://github.com/junegunn/fzf.vim)\n- [CtrlP](https://github.com/ctrlpvim/ctrlp.vim)\n- [BufExplorer](https://github.com/jlanzarotta/bufexplorer)\n- [clever-f](https://github.com/rhysd/clever-f.vim)\n- [Tagbar](https://github.com/majutsushi/tagbar)\n- [vimfiler](https://github.com/Shougo/vimfiler.vim)\n- [indentLine](https://github.com/Yggdroot/indentLine) (please set `let g:indentLine_setColors = 0` in your _vimrc_)\n\nInstallation\n------------\n\nuse your favoured plugin manager to install **bluz71/vim-nightfly-guicolors**\nthen set the colorscheme in your _vimrc_ file.\n\nIf using [vim-plug](https://github.com/junegunn/vim-plug) do the following:\n\n1. Add `Plug 'bluz71/vim-nightfly-guicolors'` to your _vimrc_\n2. Run `:PlugInstall`\n3. Add `colorscheme nightfly` to your _vimrc_, make sure this line appears\n   **after** the _Plug_ declaration.\n\nStatus line\n-----------\n\nThe _nightfly_ color scheme supports\n[lightline.vim](https://github.com/itchyny/lightline.vim). To enable the\n_nightfly_ lightline colorscheme, after the _lightline.vim_ plugin has been\ninstalled, please add the following to your _vimrc_:\n\n```viml\nlet g:lightline = { 'colorscheme': 'nightfly' }\n```\n\nThe _nightfly_ color scheme also supports\n[vim-airline](https://github.com/vim-airline/vim-airline). With modern versions\nof _vim-airline_ the _nightfly_ theme will be automatically loaded.\n\nAlternatively,\n[vim-moonfly-statusline](https://github.com/bluz71/vim-moonfly-statusline) is\navailable for those that want a simple yet informative status line. After the\n_vim-moonfly_statusline_ plugin has been installed, please add the following to\nyour _vimrc_:\n\n```viml\nlet g:moonflyHonorUserDefinedColors = 1\n```\n\nThis option will tell _moonfly-statusline_ to not use the default\n[moonfly](https://github.com/bluz71/vim-moonfly-colors) colors of that plugin,\nbut instead use the specified `statusline` colors defined by this _nightfly_\ntheme.\n\nOptions\n-------\n\nThe `g:nightflyCursorColor` option specifies whether to color the cursor or not.\nBy default the cursor will **NOT** be colored. If you prefer a colored cursor\nthen add the following to your _vimrc_:\n\n```viml\nlet g:nightflyCursorColor = 1\n```\n\nThe `g:nightflyTerminalColors` option specifies whether to use the nightfly\ncolor palette in `:terminal` windows when `termguicolors` is set. By default\nthis option is **enabled**. If you prefer not to use the nightfly color palette\nfor the first 16 terminal colors then add the following to your _vimrc_:\n\n```viml\nlet g:nightflyTerminalColors = 0\n```\n\nThe `g:nightflyUnderlineMatchParen` option specifies whether to underline\nmatching parentheses. By default this option is **disabled**. If you want to\nunderline matching parentheses then add the following to your _vimrc_:\n\n```viml\nlet g:nightflyUnderlineMatchParen = 1\n```\n\nThe `g:nightflyUndercurls` option specifies whether to use undercurls for\nspelling and linting errors in GUI versions of Vim, including terminal Vim with\n`termguicolors` set. By default this option is **enabled**. If you do not like\nthe appearance of undercurls then add the following to your _vimrc_:\n\n```viml\nlet g:nightflyUndercurls = 0\n```\n\nThe `g:nightflyItalics` option specifies whether to use italics for comments and\ncertain html elements in GUI versions of Vim, including terminal Vim with\n`termguicolors` set. By default this option is **enabled**. If you do not like\nthe appearance of italics then add the following to your _vimrc_:\n\n```viml\nlet g:nightflyItalics = 0\n```\n\nTrue Color Terminals\n--------------------\n\nMany modern terminal programs support [24-bit true\ncolors](https://gist.github.com/XVilka/8346728). Current versions of Vim and\nNeovim, on such terminals, support true colors when `set termguicolors` is\nenabled.\n\nA list of common terminals that support true colors:\n\n- [iTerm2](http://www.iterm2.com)\n- [GNOME Terminal](https://wiki.gnome.org/Apps/Terminal)\n- [Windows Terminal](https://github.com/microsoft/terminal)\n- [alacritty](https://github.com/alacritty/alacritty)\n- [kitty](https://sw.kovidgoyal.net/kitty/index.html)\n- [konsole](https://konsole.kde.org)\n- [PuTTY](https://putty.org)\n- [mintty](https://mintty.github.io)\n\n:bomb: _Terminal.app_ on macOS and _xterm_ on Unix do **not** support true\ncolors.\n\nOn terminals that support true colors, and when `termguicolors` is set, the\n_nightfly_ color scheme will emit the correct theme colors.\n\nFor the _nightfly_ color scheme to display correctly inside _tmux_ the following\nsetting will be required in _~/.tmux.conf_:\n\n```\nset -ga terminal-overrides ',xterm-256color:Tc'\n```\n\nVim, as against Neovim, inside _tmux_, will also require the following setting\nbe added to _vimrc:_\n\n```viml\nlet &t_8f = \"\\<Esc>[38;2;%lu;%lu;%lum\"\nlet &t_8b = \"\\<Esc>[48;2;%lu;%lu;%lum\"\n```\n\nRepeating, the above `t_8*` settings are **not** required for Neovim.\n\nTerminal Themes\n---------------\n\nA couple matching _nightfly_-flavoured terminal themes are provided:\n\n- _iterm2_ users on macOS can import\n  [this](terminal_themes/nightfly.itermcolors) color scheme\n\n- _GNOME Terminal_ users can run\n  [this](terminal_themes/gnome-terminal-nightfly.sh) script to create a\n  _Nightfly_ profile. Before executing the script, please install the\n  `dconf-cli` command line utility for modern versions of Gnome (3.28 and\n  later), for example `sudo apt install dconf-cli`. After executing the script,\n  please set the _cursor_ and _highlight_ colors by hand, with the appropriate\n  color values listed below, in `Preferences` / `Nightfly` / `Colors`.\n\n- [kitty](https://sw.kovidgoyal.net/kitty) users can use\n  [this](terminal_themes/kitty-theme.conf) theme\n\nFor other terminals please configure appropriately with the following colors:\n\n| Type           | Value      |\n|----------------|------------|\n| background     | `#011627`  |\n| foreground     | `#acb4c2`  |\n| cursor         | `#9ca1aa`  |\n| selection      | `#b2ceee`  |\n| selection text | `#080808`  |\n| color0         | `#1d3b53`  |\n| color1         | `#fc514e`  |\n| color2         | `#a1cd5e`  |\n| color3         | `#e3d18a`  |\n| color4         | `#82aaff`  |\n| color5         | `#c792ea`  |\n| color6         | `#7fdbca`  |\n| color7         | `#a1aab8`  |\n| color8         | `#7c8f8f`  |\n| color9         | `#ff5874`  |\n| color10        | `#21c7a8`  |\n| color11        | `#ecc48d`  |\n| color12        | `#82aaff`  |\n| color13        | `#ae81ff`  |\n| color14        | `#7fdbca`  |\n| color15        | `#d6deeb`  |\n\nColor Values\n------------\n\nRGB values for the _nightfly_ colors:\n\n| Name       | Value    | Color                                                      | Name       | Value    | Color                                                      |\n| ---------- |----------| -----------------------------------------------------------| ---------- |----------| -----------------------------------------------------------|\n| Red        | `fc514e` | ![background](https://placehold.it/32/fc514e/000000?text=+)| Background | `011627` | ![background](https://placehold.it/32/011627/000000?text=+)|\n| Green      | `a1cd5e` | ![background](https://placehold.it/32/a1cd5e/000000?text=+)| Foreground | `c3ccdc` | ![background](https://placehold.it/32/c3ccdc/000000?text=+)|\n| Yellow     | `e3d18a` | ![background](https://placehold.it/32/e3d18a/000000?text=+)| Black Blue | `081e2f` | ![background](https://placehold.it/32/081e2f/000000?text=+)|\n| Blue       | `82aaff` | ![background](https://placehold.it/32/82aaff/000000?text=+)| Dark Blue  | `092236` | ![background](https://placehold.it/32/092236/000000?text=+)|\n| Violet     | `c792ea` | ![background](https://placehold.it/32/c792ea/000000?text=+)| Deep Blue  | `0e293f` | ![background](https://placehold.it/32/0e293f/000000?text=+)|\n| Orange     | `f78c6c` | ![background](https://placehold.it/32/f78c6c/000000?text=+)| Slate Blue | `2c3043` | ![background](https://placehold.it/32/2c3043/000000?text=+)|\n| Watermelon | `ff5874` | ![background](https://placehold.it/32/ff5874/000000?text=+)| Regal Blue | `1d3b53` | ![background](https://placehold.it/32/1d3b53/000000?text=+)|\n| Emerald    | `21c7a8` | ![background](https://placehold.it/32/21c7a8/000000?text=+)| Cyan Blue  | `296596` | ![background](https://placehold.it/32/296596/000000?text=+)|\n| Tan        | `ecc48d` | ![background](https://placehold.it/32/ecc48d/000000?text=+)| Steel Blue | `4b6479` | ![background](https://placehold.it/32/4b6479/000000?text=+)|\n| Purple     | `ae81ff` | ![background](https://placehold.it/32/ae81ff/000000?text=+)| Grey Blue  | `7c8f8f` | ![background](https://placehold.it/32/7c8f8f/000000?text=+)|\n| Turquoise  | `7fdbca` | ![background](https://placehold.it/32/7fdbca/000000?text=+)| Cadet Blue | `a1aab8` | ![background](https://placehold.it/32/a1aab8/000000?text=+)|\n| Peach      | `ffcb8b` | ![background](https://placehold.it/32/ffcb8b/000000?text=+)| White Blue | `d6deeb` | ![background](https://placehold.it/32/d6deeb/000000?text=+)|\n\nTip: Relative Number Column Highlighting only for the Active Window\n-------------------------------------------------------------------\n\nHistorically, when `relativenumber` was set whilst `cursorline` was not set,\nVim would automatically highlight the cursor line in the number column with\nthe `CursorLineNR` highlight group. However, newer versions of Vim no longer\ndo that by default unless `cursorline` is set and the new `cursorlineopt`\noption is also set accordingly.\n\nAt the same time I also like disabling `relativenumber` for inactive windows.\n\nTo achieve all that please add something similar to the following to your\n_vimrc_:\n\n```viml\nset relativenumber\nif exists('&cursorlineopt')\n    set cursorlineopt=number\n    set cursorline\nendif\n\nfunction! RelativeNumberActivity(mode)\n    if &diff\n        \" For diffs, do nothing since we want relativenumbers in all windows.\n        return\n    endif\n    if &buftype == \"nofile\" || &buftype == \"nowrite\"\n        setlocal nonumber\n    elseif a:mode == \"active\"\n        setlocal relativenumber\n        if exists('&cursorlineopt')\n            setlocal cursorline\n        endif\n    else\n        setlocal norelativenumber\n        if exists('&cursorlineopt')\n            setlocal nocursorline\n        endif\n    endif\nendfunction\n\naugroup CustomWindowActivity\n    autocmd!\n    autocmd WinEnter * call RelativeNumberActivity(\"active\")\n    autocmd WinLeave * call RelativeNumberActivity(\"inactive\")\n    if exists('&cursorlineopt')\n        autocmd FileType nerdtree setlocal cursorlineopt=both\n    endif\naugroup END\n```\n\nFeel free to change, or ignore, per your needs.\n\nLicense\n-------\n\n[MIT](https://opensource.org/licenses/MIT)\n", "image_urls": ["https://raw.githubusercontent.com/bluz71/misc-binaries/master/headings/nightfly.png", "https://raw.githubusercontent.com/bluz71/misc-binaries/master/nightfly/ruby_nightfly.png", "https://raw.githubusercontent.com/bluz71/misc-binaries/master/nightfly/javascript_nightfly.png"], "latest_commit_at": "2020-05-24T04:26:43Z"}